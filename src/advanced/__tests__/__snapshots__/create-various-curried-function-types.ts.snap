// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should return correctly 1`] = `
"type map = map_00;
type map_00 = {
  <T>(_fn: PH, mappable: Mappable<T>): map_mappable_01<T>;
  <T>(_fn: PH, array: T[]): map_array_01<T>;
  <T, U>(fn: (v: T) => U, array: T[]): map_array_11<T, U>;
  <T, U>(fn: (v: T) => U, mappable: Mappable<T>): map_mappable_11<T, U>;
  <K extends \\"array\\", X extends \\"01\\">(): <T>(_fn: PH, array: T[]) => map_array_01<T>;
  <K extends \\"mappable\\">(): map_mappable_00;
  <X extends \\"1\\">(): <T, U>(fn: (v: T) => U) => map_10<T, U>;
  <K extends \\"array\\">(): map_array_00;
  <K extends \\"array\\", X extends \\"11\\">(): <T, U>(fn: (v: T) => U, array: T[]) => map_array_11<T, U>;
  <K extends \\"mappable\\", X extends \\"11\\">(): <T, U>(fn: (v: T) => U, mappable: Mappable<T>) => map_mappable_11<T, U>;
  <K extends \\"mappable\\", X extends \\"01\\">(): <T>(_fn: PH, mappable: Mappable<T>) => map_mappable_01<T>;
  <T, U>(fn: (v: T) => U): map_10<T, U>;
};
type map_10 = {
  (array: T[]): map_array_11<T, U>;
  <K extends \\"array\\">(): (array: T[]) => map_array_11<T, U>;
  <K extends \\"mappable\\">(): (mappable: Mappable<T>) => map_mappable_11<T, U>;
  (mappable: Mappable<T>): map_mappable_11<T, U>;
};
type map_array_00 = {
  <T>(_fn: PH, array: T[]): map_array_01<T>;
  <T, U>(fn: (v: T) => U, array: T[]): map_array_11<T, U>;
  <X extends \\"11\\">(): <T, U>(fn: (v: T) => U, array: T[]) => map_array_11<T, U>;
  <X extends \\"01\\">(): <T>(_fn: PH, array: T[]) => map_array_01<T>;
  <X extends \\"1\\">(): <T, U>(fn: (v: T) => U) => map_array_10<T, U>;
  <T, U>(fn: (v: T) => U): map_array_10<T, U>;
};
type map_array_01<T> = {
  <U>(fn: (v: T) => U): map_array_11<T, U>;
};
type map_array_10<T, U> = {
  (array: T[]): map_array_11<T, U>;
};
type map_array_11<T, U> = U[];
type map_mappable_00 = {
  <T>(_fn: PH, mappable: Mappable<T>): map_mappable_01<T>;
  <T, U>(fn: (v: T) => U, mappable: Mappable<T>): map_mappable_11<T, U>;
  <X extends \\"11\\">(): <T, U>(fn: (v: T) => U, mappable: Mappable<T>) => map_mappable_11<T, U>;
  <X extends \\"01\\">(): <T>(_fn: PH, mappable: Mappable<T>) => map_mappable_01<T>;
  <X extends \\"1\\">(): <T, U>(fn: (v: T) => U) => map_mappable_10<T, U>;
  <T, U>(fn: (v: T) => U): map_mappable_10<T, U>;
};
type map_mappable_01<T> = {
  <U>(fn: (v: T) => U): map_mappable_11<T, U>;
};
type map_mappable_10<T, U> = {
  (mappable: Mappable<T>): map_mappable_11<T, U>;
};
type map_mappable_11<T, U> = Mappable<U>;"
`;
